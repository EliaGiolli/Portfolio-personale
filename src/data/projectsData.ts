import { ProjectDataTypes } from "../types/ProjectDataTypes";

export const projectsData: ProjectDataTypes[]  = [
    {
        id: 1,
        title: "The Cozy Corner",
        description: "Sito vetrina interattivo per rilassarsi e scoprire sezioni in modo dinamico.",
        longDescription: "The Cozy Corner è un progetto sviluppato per esplorare un design minimalista e un'interazione rilassante per l'utente. Ogni sezione è pensata per offrire un'esperienza visiva piacevole, sfruttando animazioni leggere e un layout responsive. Tecnologie principali: TypeScript, Tailwind CSS e Vite.",
        imageUrl: "/img/cozy-corner.png",
        githubLink: "https://github.com/EliaGiolli/cozy-corner-ts",
        demoLink: "https://cozy-corner-app.netlify.app/",
        technologies: ["Typescript", "TailwindCSS", "Vite"],
        type: "frontend",
        slug: "the-cozy-corner"
    },
    {
        id: 2,
        title: "PennyWise",
        description: "App per tenere traccia delle spese e calcolare il totale.",
        longDescription: "PennyWise è un'applicazione pensata per chi vuole monitorare le proprie spese quotidiane in modo semplice e intuitivo. Offre funzionalità base come inserimento spese, visualizzazione di una lista e calcolo automatico del totale. Progetto ideale per approfondire la gestione dello stato con React.",
        imageUrl: "/img/pennywise.png",
        githubLink: "https://github.com/EliaGiolli/Expense-handler-app",
        demoLink: "https://pennywise-expense-tracker.netlify.app/",
        technologies: ["React", "TailwindCSS","Vite"],
        type: "frontend",
        slug: "pennywise"
    },
    {
        id: 3,
        title: "TaskFlow ",
        description: "Lista di cose da fare per gestire le attività quotidiane.",
        longDescription: "TaskFlow è un'applicazione per la gestione delle attività personali. Permette di aggiungere, modificare e cancellare task in modo rapido. Include anche la persistenza dei dati in localStorage e la possibilità di cambiare tema (dark/light). Sviluppata per esercitarmi nelle best practices di React e gestione dello stato.",
        imageUrl: "/img/taskflow.png",
        githubLink: "https://github.com/EliaGiolli/React-todo-app",
        demoLink: "https://taskflow-todo.netlify.app/",
        technologies: ["React", "TailwindCSS", "Vite"],
        type: "frontend",
        slug: "taskflow"
    },
    {
        id: 4,
        title: "HorrorVault",
        description: "Sito vetrina per cercare film online. L'utente può scegliere i film horror o di altri generi",
        longDescription: "Questo progetto consente di cercare i film tramite l'integrazione di un'API pubblica. L'utente può cercare film ricavati da un mock database. È stato un esercizio utile per prendere confidenza con fetch API, gestione degli errori e il routing con Vue Router",
        imageUrl: "/img/horrorvault.png",
        githubLink: "https://github.com/EliaGiolli/HorrorVault-Vue",
        demoLink: "https://horror-vault-vue.vercel.app/horror",
        technologies: ["Vue", "Vite"],
        type: "frontend",
        slug: "horrorvault"
    },
    {
        id: 5,
        title: "ClockWise",
        description: "Dashboard interattiva che mostra le presenze e le ore mensili lavorate",
        longDescription: "Questo progetto consente di visualizzare dei grafici con Recharts per visualizzare i turni settimanali e le ore mensili lavorate. L'utente può inserire dei task che potrà visualizzare in una tabella.",
        imageUrl: "/img/clockwise.png",
        githubLink: "https://github.com/EliaGiolli/ClockWise---React-ts/tree/main",
        demoLink: "https://clock-wise-react-ts.vercel.app/",
        technologies: ["React","Typescript", "TailwindCSS", "Vite"],
        type: "frontend",
        slug: "clockwise"
    },
    {
        id: 6,
        title: "VueStock",
        description: "App moderna e interattiva che permette di aggiungere dei prodotti inseriti dall'utente al catalogo",
        longDescription: "Questo progetto consente di compiere delle basi operazioni CRUD per aggiungere e cancellare degli elementi all'inventario. L'app è stata creata con la CompositionAPI di Vue3 e TailwindCSS v4",
        imageUrl: "/img/vuestock.png",
        githubLink: "https://github.com/EliaGiolli/Vue-VueStock",
        demoLink: "https://vue-vue-stock.vercel.app/",
        technologies: ["Vue", "TailwindCSS", "Vite"],
        type: "frontend",
        slug: "vuestock"
    },
    {
        id: 7,
        title: "ShelfSpot",
        description: "ShelfSpot è un’app web che permette di scoprire, salvare e prendere in prestito libri, offrendo un’esperienza simile a una biblioteca digitale.",
        longDescription: "ShelfSpot è un’app React con TypeScript e TailwindCSS che integra l’OpenLibrary API per gestione libri, Redux Toolkit per lo stato globale e React Router v7 per la navigazione. Include autenticazione, percorsi protetti, gestione di preferiti e sistema di prestito simulato, con test tramite Vitest e Testing Library",
        imageUrl: "/img/shelfspot.png",
        githubLink: "https://github.com/EliaGiolli/ShelfSpot-react",
        demoLink: "https://shelf-spot-react.vercel.app/login",
        technologies: ["React","Typescript", "TailwindCSS", "Vite"],
        type: "frontend",
        slug: "shelfspot"
    },
    {
        id: 8,
        title: "AuthServer",
        description: "Questa applicazione permette agli utenti di registrarsi, accedere in sicurezza e gestire le proprie attività. Ogni utente può creare, modificare, consultare e cancellare i propri compiti, con un sistema che protegge i dati sensibili e assicura che solo chi ha accesso autorizzato possa vedere o modificare le informazioni.",
        longDescription: "Quest'applicazione è una REST API con Node.js, Express, TypeScript e MongoDB. Offre autenticazione JWT sicura, gestione completa delle attività (CRUD) con validazione Zod e protezione dei dati con Helmet e bcrypt. Strutturata in modo modulare, è pronta per essere integrata con un frontend o estesa con nuove funzionalità.",
        imageUrl: "/img/authserver.png",
        githubLink: "https://github.com/EliaGiolli/express-ts-authserver",
        demoLink: "",
        technologies: ["Express","Typescript", "MongoDB"],
        type: "backend",
        slug: "express-auth-server"
    },
    {
        id: 9,
        title: "Dashboard Admin",
        description: "Dashboard Admin è un’applicazione che simula una dashboard per sviluppatori e amministratori: permette di monitorare lo stato del sistema, gestire eventi e registri, testare la sicurezza dei dati e esplorare vari strumenti di backend in modo sicuro e organizzato.",
        longDescription: "Questo progetto consente di compiere delle basi operazioni CRUD per aggiungere e cancellare degli elementi all'inventario. L'app è stata creata con la CompositionAPI di Vue3 e TailwindCSS v4",
        imageUrl: "/img/dashboard-admin.png",
        githubLink: "https://github.com/EliaGiolli/dashboard-admin-express",
        demoLink: "",
        technologies: ["Express","Typescript"],
        type: "backend",
        slug: "express-dashboard-admin"
    },
    {
        id: 10,
        title: "Quotes Server",
        description: "Quotes Server è un piccolo server che raccoglie e gestisce frasi o citazioni. È pensato per evolversi nel tempo, diventando una piattaforma completa dove salvare, consultare e condividere pensieri ispiratori.",
        longDescription: "Citazioni è un server Node.js basato su Express che utilizza EJS per il rendering e integra strumenti come Helmet per la sicurezza e Mongoose per la gestione del database. Il progetto è in espansione e prevede l’aggiunta di autenticazione, middleware personalizzati e persistenza dei dati.",
        imageUrl: "/img/quotes-server.png",
        githubLink: "https://github.com/EliaGiolli/first-server-with-express/tree/main",
        demoLink: "",
        technologies: ["Express"],
        type: "backend",
        slug: "express-quotes-server"
    },
    {
        id: 11,
        title: "VeggieVibes",
        description: "VeggieVibes è un’app moderna dedicata agli amanti della cucina vegetariana: permette di scoprire nuove ricette, esplorarle facilmente e trovare ispirazione per pasti sani e gustosi.",
        longDescription: "VeggieVibes è un’app React basata su Vite che utilizza il Spoonacular API per recuperare e visualizzare dati relativi a ricette vegetariane. L’app gestisce la navigazione interna tramite React Router v6 e adotta TailwindCSS per uno stile moderno e reattivo.",
        imageUrl: "/img/veggievibes.png",
        githubLink: "https://github.com/EliaGiolli/VeggieVibes-react",
        demoLink: "https://veggie-vibes-react.vercel.app/",
        technologies: ["React", "Typescript","TailwindCSS", "Vite"],
        type: "frontend",
        slug: "veggievibes"
    },
];
